syntax = "proto2";
package EA.Sims4.Network;
import "Consts.proto";
import "Math.proto";
import "ResourceKey.proto";

enum AwarenessChannelName {
	AWARENESS_CHANNEL_PROXIMITY = 0;
	AWARENESS_CHANNEL_AUDIO_VOLUME = 1;
	AWARENESS_CHANNEL_GAMEPLAY_0 = 1000;
	AWARENESS_CHANNEL_GAMEPLAY_1 = 1001;
	AWARENESS_CHANNEL_GAMEPLAY_2 = 1002;
	AWARENESS_CHANNEL_GAMEPLAY_3 = 1003;
	AWARENESS_CHANNEL_GAMEPLAY_4 = 1004;
	AWARENESS_CHANNEL_GAMEPLAY_5 = 1005;
	AWARENESS_CHANNEL_GAMEPLAY_6 = 1006;
	AWARENESS_CHANNEL_GAMEPLAY_7 = 1007;
	AWARENESS_CHANNEL_GAMEPLAY_8 = 1008;
	AWARENESS_CHANNEL_GAMEPLAY_9 = 1009;
}

message AnimationEventHandler {
	required uint32 event_type = 1;
	required uint32 event_id = 2;
	required uint64 tag = 3;
}

message AnimationRequestBlock {
	required bytes arb_data = 1;
	repeated .EA.Sims4.Network.AnimationEventHandler event_handlers = 2;
	repeated .EA.Sims4.Network.ManagerObjectId objects_to_reset = 3;
	optional bool is_interruptible = 4 [default = false];
	optional bool should_analyze = 5 [default = false];
}

message AnimationStateRequest {
	optional .EA.Sims4.Network.ResourceKey asm = 1;
	optional string state_name = 2;
	optional string actor_name = 3;
}

message CurveData {
	required float input_value = 1;
	required float output_value = 2;
}

message FocusEvent {
	enum EventType {
		FOCUS_ADD = 0;
		FOCUS_DELETE = 1;
		FOCUS_CLEAR = 2;
		FOCUS_MODIFY_SCORE = 3;
		FOCUS_DISABLE = 4;
		FOCUS_FORCE_UPDATE = 5;
		FOCUS_PRINT = 6;
	}
	required .EA.Sims4.Network.FocusEvent.EventType type = 1;
	optional uint32 id = 2;
	optional uint32 layer = 3;
	optional uint32 flags = 4;
	optional float score = 5;
	optional uint32 joint_name_hash = 6;
	optional uint64 target_id = 7;
	optional .EA.Sims4.Network.Vector3 offset = 8;
	repeated .EA.Sims4.Network.CurveData distance_curve = 9;
	repeated .EA.Sims4.Network.CurveData facing_curve = 10;
	optional uint64 source_id = 11;
}

message ConfigureAwarenessActor {
	message ChannelOptions {
		required .EA.Sims4.Network.AwarenessChannelName name = 1;
		optional .EA.Sims4.Network.ConfigureAwarenessActor.ChannelEvaluationMode eval_mode = 2;
		optional float gate = 3;
		optional float gain = 4;
		optional float limit = 5;
		optional float trigger_threshold_delta = 6;
		optional string type_name = 7;
		optional float hold_time = 8 [default = 1.5];
		optional float cool_down_time = 9 [default = 1.5];
	}
	enum ChannelEvaluationMode {
		AWARENESS_CHANNEL_EVALMODE_PEAK = 0;
		AWARENESS_CHANNEL_EVALMODE_AVERAGE = 1;
		AWARENESS_CHANNEL_EVALMODE_SUM = 2;
		AWARENESS_CHANNEL_EVALMODE_SUM_SPLITSIGN = 3;
		AWARENESS_CHANNEL_EVALMODE_AVERAGE_SPLITSIGN = 4;
	}
	repeated .EA.Sims4.Network.AwarenessChannelName channels_to_remove = 3;
	repeated .EA.Sims4.Network.ConfigureAwarenessActor.ChannelOptions channels_to_configure = 4;
	optional float proximity_inner_radius = 5;
	optional float proximity_outer_radius = 6;
}

message ConfigureAwarenessSourceObject {
	message GameplayChannelValue {
		required .EA.Sims4.Network.AwarenessChannelName name = 1;
		required float value = 2;
	}
	repeated .EA.Sims4.Network.ConfigureAwarenessSourceObject.GameplayChannelValue gameplay_channel_values = 3;
	optional float audio_volume_multiplier = 4;
	optional float audio_full_volume_radius = 5;
	optional float audio_falloff_radius = 6;
}

message ProceduralControl {
	enum ProceduralControlType {
		UNKNOWN = 0;
		WHEEL = 1;
		SPHERE_WHEEL = 2;
		SKATE = 3;
		LIP_SYNC = 4;
	}
	optional uint32 control_id = 1;
	optional .EA.Sims4.Network.ProceduralControl.ProceduralControlType control_type = 2;
	optional uint32 joint_name_hash = 3;
	optional uint32 reference_joint_name_hash = 4;
	optional bool enable_terrain_alignment = 5;
	optional string bump_sound_name = 6;
	optional .EA.Sims4.Network.Vector3 dimensions = 7;
	optional string start_vfx = 8;
	optional string stop_vfx = 9;
	optional string start_sound = 10;
	optional string loop_sound = 11;
	optional string stop_sound = 12;
	optional uint32 vfx_joint_name_hash = 13;
	optional float effect_speed_threshold = 14;
	optional uint32 jaw_flap_override = 15;
}

message ProceduralAnimationData {
	repeated .EA.Sims4.Network.ProceduralControl controls = 1;
}

message ProceduralControlRotation {
	optional uint32 control_id = 1;
	optional uint32 joint_hash = 2;
	optional float duration = 3 [default = 0];
	optional uint64 target_id = 4;
	optional uint32 target_joint_hash = 5;
	optional .EA.Sims4.Network.Quaternion rotation = 6;
	optional float rotation_around_facing = 7 [default = 0];
}
