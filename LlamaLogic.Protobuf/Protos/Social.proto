syntax = "proto2";
package EA.Sims4.Network;
import "Consts.proto";
import "S4Common.proto";
import "Localization.proto";
import "Exchange.proto";

enum SocialFeedItemType {
	SFI_ITEM_DOWNLOADED = 0;
	SFI_ITEM_UPLOADED = 1;
	SFI_ITEM_FAVORITED = 2;
	SFI_ITEM_COMMENTED = 3;
	SFI_ITEM_SHOWCASED = 4;
	SFI_PROFILE_COMMENTED = 5;
	SFI_NEW_FOLLOWERS = 6;
}
enum SocialClusterMessageType {
	SOC_LOGIN = 0;
	SOC_LOGOFF = 1;
	SOC_PRESENCEUPDATE = 2;
	SOC_FEEDUPDATE = 3;
	SOC_ADD_FEEDSUB = 4;
	SOC_REMOVE_FEEDSUB = 5;
	SOC_BROADCAST_PRIVOP = 6;
	SOC_BROADCAST_QUEUED = 8;
	SOC_BROADCAST_CACHE_INVALIDATE = 9;
	SOC_REST_USER_REGISTER = 10;
}

message SocialFriendMsg {
	optional uint64 simId = 1;
	optional uint64 nucleusid = 2;
	optional string note = 3;
	optional string prefix = 4;
	optional string persona = 5;
	optional bool cheatForce = 6;
}

message SocialPersonaResponseMsg {
	repeated string personas = 1;
}

message SocialGenericResponse {
	optional uint32 error = 1;
	optional .EA.Sims4.Network.SocialOpTypes msg_type = 2;
	optional bytes postId = 3;
	optional bytes postParentId = 4;
}

message SocialPlayerInfoList {
	message PlayerInfo {
		optional string AccountName = 1;
		optional string AccountNotes = 2;
		optional .EA.Sims4.Network.OnlinePresenceStatus presence = 3;
		optional string OnlineStatus2 = 4;
		optional uint64 NucleusId = 9;
		optional string PlayerBio = 10;
		optional bool exclude_reported = 11;
		optional bool IsUserBlocked = 12;
	}
	repeated .EA.Sims4.Network.SocialPlayerInfoList.PlayerInfo players = 1;
}

message SocialSearchMsg {
	optional string prefix = 1;
	repeated .EA.Sims4.Network.LocalizedStringToken search_results = 2;
}

message OriginErrorMessage {
	optional uint32 errorcode = 1;
	optional string errormessage = 2;
}

message SocialInviteResponseMessage {
	optional string invitationid = 1;
	optional uint32 invitationtype = 2;
	optional uint64 inviternucleusid = 3;
	optional uint64 accepternucleusid = 4;
	optional bool actionSuccess = 5;
}

message SocialCassandraTest {
	optional .EA.Sims4.Network.CassandraTestCode opcode = 1;
}

message SocialFriendListRequestMessage {
	optional uint64 account_id = 1;
	optional uint64 friend_id = 2;
	optional string address_str = 3;
	optional string object_str = 4;
	optional uint64 reply_proxy_id = 5;
}

message SocialRequestNucleusIdFromPersona {
	optional uint64 requestid = 1;
	optional string personaName = 2;
	optional uint32 message_id = 3;
}

message SocialNucleusIdFromPersonaResponse {
	optional uint64 requestid = 1;
	optional uint64 nucleusid = 2;
	optional uint32 message_id = 3;
}

message SocialExchangeMessage {
	optional .EA.Sims4.Network.ExchangeSocialEnvelope envelope = 1;
}

message SocialFollowersMessage {
	repeated bytes sfim_blob = 1;
}

message SocialFeedItemMessage {
	optional bytes feed_id = 1;
	optional .EA.Sims4.Network.SocialFeedItemType feed_type = 2;
	optional .EA.Sims4.Network.TrayMetadata metadata = 3;
	optional uint64 nucleusid = 4;
	optional string persona = 5;
	optional uint64 quantity = 6;
	optional uint64 follower_nucleusid = 7;
	optional string follower_persona = 8;
	optional .EA.Sims4.Network.SocialFollowersMessage followers_blob = 9;
	optional bool is_maxis_curated = 10;
}

message SocialFeedItemUnserializedMessage {
	optional bytes feed_id = 1;
	optional bytes data = 2;
	optional uint64 count_override = 3;
}

message SocialWallCommentMessage {
	optional bytes uuid = 1;
	optional uint64 author_id = 2;
	optional string author_persona = 3;
	optional string message = 4;
	optional uint64 created_timestamp = 5;
}

message SocialGetWallCommentsMessage {
	optional uint64 nucleusid = 1;
	optional bytes gallery_id = 2;
	optional bytes starting_uuid = 3;
	optional uint32 num_results = 4;
	repeated .EA.Sims4.Network.SocialWallCommentMessage messages = 5;
	optional bool hidden = 6;
	optional bool exclude_reported = 7;
	optional string nextToken = 8;
}

message SocialPostWallCommentMessage {
	optional uint64 nucleusid = 1;
	optional bytes gallery_id = 2;
	optional .EA.Sims4.Network.SocialWallCommentMessage message = 3;
}

message SocialDeleteWallCommentMessage {
	optional uint64 nucleusid = 1;
	optional bytes gallery_id = 2;
	optional bytes uuid = 3;
}

message SocialRequestFeedWallMessage {
	optional bytes ending_uuid = 1;
	repeated .EA.Sims4.Network.SocialFeedItemMessage messages = 2;
	repeated .EA.Sims4.Network.SocialFeedItemUnserializedMessage unserialized_messages = 3;
	optional uint32 num_items = 4;
}

message SocialRequestFollowersMessage {
	optional uint64 playerid = 1;
	optional string id = 2;
	optional string prev_last_persona = 3;
	optional uint32 num_request = 4;
}

message SocialRequestIgnoreListMessage {
	optional uint64 player_nucleus_id = 1;
}

message SocialGetPlayerInfoListMessage {
	message PlayerInfo {
		optional uint64 nucleus_id = 1;
		optional string origin_persona = 2;
		optional string first_party_persona = 3;
	}
	optional uint64 player_nucleus_id = 1;
	repeated .EA.Sims4.Network.SocialGetPlayerInfoListMessage.PlayerInfo player_info_list = 2;
}

message SocialCommentPetitionMessage {
	optional uint64 nucleusid = 1;
	optional bytes commentid = 2;
	optional string commentKey = 3;
}

message SocialBioPetitionMessage {
	optional uint64 nucleusid = 1;
	optional uint64 bio_nucleusid = 2;
}

message SocialFeedRemovalMessage {
	optional bytes feed_id = 1;
}

message SocialControlMessage {
	required .EA.Sims4.Network.SocialOpTypes opcode = 1;
	optional .EA.Sims4.Network.SocialOpTypes subop = 2;
	optional uint64 transactionId = 3;
	optional uint32 result = 100;
	optional .EA.Sims4.Network.SocialGetWallCommentsMessage getwallcommentsmsg = 4;
	optional .EA.Sims4.Network.SocialPostWallCommentMessage postwallcommentmsg = 5;
	optional .EA.Sims4.Network.SocialDeleteWallCommentMessage deletewallcommentmsg = 6;
	optional .EA.Sims4.Network.SocialFriendMsg friendmsg = 7;
	optional .EA.Sims4.Network.SocialGenericResponse genericresponse = 8;
	optional .EA.Sims4.Network.SocialPlayerInfoList playerinfo = 9;
	optional .EA.Sims4.Network.SocialFeedSubMessage feedsubmsg = 10;
	optional .EA.Sims4.Network.SocialSearchMsg searchresultmsg = 11;
	optional .EA.Sims4.Network.SocialInviteResponseMessage inviteresponsemsg = 12;
	optional .EA.Sims4.Network.OriginErrorMessage originerror = 13;
	optional .EA.Sims4.Network.SocialCassandraTest socialcassandratest = 14;
	optional .EA.Sims4.Network.SocialFriendListRequestMessage socialfriendlistrequestmsg = 15;
	optional .EA.Sims4.Network.SocialRequestNucleusIdFromPersona socialrequestnucleusidfrompersona = 16;
	optional .EA.Sims4.Network.SocialNucleusIdFromPersonaResponse socialnucleusidfrompersonaresponse = 17;
	optional .EA.Sims4.Network.SocialExchangeMessage socialexchangemessage = 18;
	optional .EA.Sims4.Network.SocialRequestFeedWallMessage socialrequestfeedwallmessage = 19;
	optional .EA.Sims4.Network.ExchangeStatTickerMessage stat_tickers = 21;
	optional .EA.Sims4.Network.SocialCommentPetitionMessage comment_petition_msg = 22;
	optional .EA.Sims4.Network.SocialFeedRemovalMessage feedremovalmsg = 23;
	optional .EA.Sims4.Network.SocialBioPetitionMessage bio_petition_msg = 24;
	optional .EA.Sims4.Network.SocialFacebookEventMessage fb_event_msg = 25;
	optional .EA.Sims4.Network.SocialRequestFollowersMessage requestfollowers_msg = 26;
	optional .EA.Sims4.Network.SocialResponseFollowersMessage responsefollowers_msg = 27;
	optional .EA.Sims4.Network.SocialRequestIgnoreListMessage requestignorelist_msg = 28;
	optional .EA.Sims4.Network.SocialGetPlayerInfoListMessage response_player_info_list_msg = 29;
	optional .EA.Sims4.Network.ServerPlayerIdentificationListMessage player_identification_list_msg = 30;
	optional .EA.Sims4.Network.SocialCandidatesMessage candidate_msg = 31;
	optional .EA.Sims4.Network.SocialEvaluationResultsMessage evaluation_results_msg = 32;
	optional .EA.Sims4.Network.SocialCGUpdateMessage cg_update_msg = 33;
	optional .EA.Sims4.Network.UGCShare ugc_share_msg = 34;
}

message SocialInvalidateMsg {
	optional uint32 cache_index = 1;
	optional bytes key = 2;
}

message SocialControlQueueBroadcastMessage {
	optional .EA.Sims4.Network.SocialControlMessage control = 1;
	repeated uint64 friendIds = 3 [packed = true];
}

message LifeEventMessage {
	optional uint32 type = 1;
	repeated fixed64 sim_ids = 2 [packed = true];
}

message SocialFacebookEventMessage {
	required string objectId = 1;
	required string accessToken = 2;
	required string guid = 3;
}

message SocialCandidateStatisticSubmessage {
	optional bytes remote_id = 1;
	optional uint32 views_count = 2;
	optional uint32 wins_count = 3;
	optional uint32 platform = 4;
	optional uint32 category = 5;
	optional bool was_reported = 6;
	optional uint64 expires_epoch_sec = 7;
}

message SocialCandidatesMessage {
	optional uint32 count = 1;
	optional uint32 platform_restriction = 2;
	optional uint32 category_restriction = 3;
	optional string challenge = 4;
	optional bytes digest = 5;
	repeated .EA.Sims4.Network.SocialCandidateStatisticSubmessage candidates = 6;
	optional uint64 expire_epoch_secs = 7;
}

message SocialEvaluationResultsMessage {
	repeated string winner_ids = 1;
	repeated string loser_ids = 2;
	optional bytes digest = 3;
}

message SocialCGDigestMessage {
	optional string challenge = 1;
	repeated .EA.Sims4.Network.SocialCandidateStatisticSubmessage candidates = 2;
}
