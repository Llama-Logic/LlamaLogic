### YamlMime:ManagedReference
items:
- uid: LlamaLogic.Packages.Models.IModel
  commentId: T:LlamaLogic.Packages.Models.IModel
  id: IModel
  parent: LlamaLogic.Packages.Models
  children:
  - LlamaLogic.Packages.Models.IModel.Encode
  - LlamaLogic.Packages.Models.IModel.GetName(System.IO.Stream)
  - LlamaLogic.Packages.Models.IModel.GetNameAsync(System.IO.Stream,System.Threading.CancellationToken)
  - LlamaLogic.Packages.Models.IModel.ResourceName
  - LlamaLogic.Packages.Models.IModel.SupportedTypes
  langs:
  - csharp
  - vb
  name: IModel
  nameWithType: IModel
  fullName: LlamaLogic.Packages.Models.IModel
  type: Interface
  source:
    remote:
      path: LlamaLogic.Packages/Models/IModel.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: IModel
    path: ../LlamaLogic.Packages/Models/IModel.cs
    startLine: 5
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models
  summary: Represents a model for a resource
  example: []
  syntax:
    content: public interface IModel
    content.vb: Public Interface IModel
- uid: LlamaLogic.Packages.Models.IModel.SupportedTypes
  commentId: P:LlamaLogic.Packages.Models.IModel.SupportedTypes
  id: SupportedTypes
  parent: LlamaLogic.Packages.Models.IModel
  langs:
  - csharp
  - vb
  name: SupportedTypes
  nameWithType: IModel.SupportedTypes
  fullName: LlamaLogic.Packages.Models.IModel.SupportedTypes
  type: Property
  source:
    remote:
      path: LlamaLogic.Packages/Models/IModel.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: SupportedTypes
    path: ../LlamaLogic.Packages/Models/IModel.cs
    startLine: 10
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models
  summary: Gets a list of resource types that this model supports
  example: []
  syntax:
    content: public static abstract ISet<ResourceType> SupportedTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ISet{LlamaLogic.Packages.ResourceType}
    content.vb: Public Shared MustInherit ReadOnly Property SupportedTypes As ISet(Of ResourceType)
  overload: LlamaLogic.Packages.Models.IModel.SupportedTypes*
- uid: LlamaLogic.Packages.Models.IModel.GetName(System.IO.Stream)
  commentId: M:LlamaLogic.Packages.Models.IModel.GetName(System.IO.Stream)
  id: GetName(System.IO.Stream)
  parent: LlamaLogic.Packages.Models.IModel
  langs:
  - csharp
  - vb
  name: GetName(Stream)
  nameWithType: IModel.GetName(Stream)
  fullName: LlamaLogic.Packages.Models.IModel.GetName(System.IO.Stream)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/IModel.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: GetName
    path: ../LlamaLogic.Packages/Models/IModel.cs
    startLine: 15
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models
  summary: "Gets the name of a resource from its raw data, if it has one (\U0001F504️\U0001F4A4)"
  example: []
  syntax:
    content: public static abstract string? GetName(Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
    return:
      type: System.String
    content.vb: Public Shared MustInherit Function GetName(stream As Stream) As String
  overload: LlamaLogic.Packages.Models.IModel.GetName*
- uid: LlamaLogic.Packages.Models.IModel.GetNameAsync(System.IO.Stream,System.Threading.CancellationToken)
  commentId: M:LlamaLogic.Packages.Models.IModel.GetNameAsync(System.IO.Stream,System.Threading.CancellationToken)
  id: GetNameAsync(System.IO.Stream,System.Threading.CancellationToken)
  parent: LlamaLogic.Packages.Models.IModel
  langs:
  - csharp
  - vb
  name: GetNameAsync(Stream, CancellationToken)
  nameWithType: IModel.GetNameAsync(Stream, CancellationToken)
  fullName: LlamaLogic.Packages.Models.IModel.GetNameAsync(System.IO.Stream, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/IModel.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: GetNameAsync
    path: ../LlamaLogic.Packages/Models/IModel.cs
    startLine: 20
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models
  summary: "Gets the name of a resource from its raw data, if it has one, asynchronously (\U0001F504️\U0001F4A4)"
  example: []
  syntax:
    content: public static abstract Task<string?> GetNameAsync(Stream stream, CancellationToken cancellationToken = default)
    parameters:
    - id: stream
      type: System.IO.Stream
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Shared MustInherit Function GetNameAsync(stream As Stream, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: LlamaLogic.Packages.Models.IModel.GetNameAsync*
- uid: LlamaLogic.Packages.Models.IModel.ResourceName
  commentId: P:LlamaLogic.Packages.Models.IModel.ResourceName
  id: ResourceName
  parent: LlamaLogic.Packages.Models.IModel
  langs:
  - csharp
  - vb
  name: ResourceName
  nameWithType: IModel.ResourceName
  fullName: LlamaLogic.Packages.Models.IModel.ResourceName
  type: Property
  source:
    remote:
      path: LlamaLogic.Packages/Models/IModel.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: ResourceName
    path: ../LlamaLogic.Packages/Models/IModel.cs
    startLine: 25
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models
  summary: Gets the name of this resource if it has one
  example: []
  syntax:
    content: string? ResourceName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ResourceName As String
  overload: LlamaLogic.Packages.Models.IModel.ResourceName*
- uid: LlamaLogic.Packages.Models.IModel.Encode
  commentId: M:LlamaLogic.Packages.Models.IModel.Encode
  id: Encode
  parent: LlamaLogic.Packages.Models.IModel
  langs:
  - csharp
  - vb
  name: Encode()
  nameWithType: IModel.Encode()
  fullName: LlamaLogic.Packages.Models.IModel.Encode()
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/IModel.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: Encode
    path: ../LlamaLogic.Packages/Models/IModel.cs
    startLine: 30
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models
  summary: "Encodes the resource model into raw format (\U0001F504️\U0001F3C3)"
  example: []
  syntax:
    content: ReadOnlyMemory<byte> Encode()
    return:
      type: System.ReadOnlyMemory{System.Byte}
    content.vb: Function Encode() As ReadOnlyMemory(Of Byte)
  overload: LlamaLogic.Packages.Models.IModel.Encode*
references:
- uid: LlamaLogic.Packages.Models
  commentId: N:LlamaLogic.Packages.Models
  href: LlamaLogic.html
  name: LlamaLogic.Packages.Models
  nameWithType: LlamaLogic.Packages.Models
  fullName: LlamaLogic.Packages.Models
  spec.csharp:
  - uid: LlamaLogic
    name: LlamaLogic
    href: LlamaLogic.html
  - name: .
  - uid: LlamaLogic.Packages
    name: Packages
    href: LlamaLogic.Packages.html
  - name: .
  - uid: LlamaLogic.Packages.Models
    name: Models
    href: LlamaLogic.Packages.Models.html
  spec.vb:
  - uid: LlamaLogic
    name: LlamaLogic
    href: LlamaLogic.html
  - name: .
  - uid: LlamaLogic.Packages
    name: Packages
    href: LlamaLogic.Packages.html
  - name: .
  - uid: LlamaLogic.Packages.Models
    name: Models
    href: LlamaLogic.Packages.Models.html
- uid: LlamaLogic.Packages.Models.IModel.SupportedTypes*
  commentId: Overload:LlamaLogic.Packages.Models.IModel.SupportedTypes
  href: LlamaLogic.Packages.Models.IModel.html#LlamaLogic_Packages_Models_IModel_SupportedTypes
  name: SupportedTypes
  nameWithType: IModel.SupportedTypes
  fullName: LlamaLogic.Packages.Models.IModel.SupportedTypes
- uid: System.Collections.Generic.ISet{LlamaLogic.Packages.ResourceType}
  commentId: T:System.Collections.Generic.ISet{LlamaLogic.Packages.ResourceType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  name: ISet<ResourceType>
  nameWithType: ISet<ResourceType>
  fullName: System.Collections.Generic.ISet<LlamaLogic.Packages.ResourceType>
  nameWithType.vb: ISet(Of ResourceType)
  fullName.vb: System.Collections.Generic.ISet(Of LlamaLogic.Packages.ResourceType)
  name.vb: ISet(Of ResourceType)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: <
  - uid: LlamaLogic.Packages.ResourceType
    name: ResourceType
    href: LlamaLogic.Packages.ResourceType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: (
  - name: Of
  - name: " "
  - uid: LlamaLogic.Packages.ResourceType
    name: ResourceType
    href: LlamaLogic.Packages.ResourceType.html
  - name: )
- uid: System.Collections.Generic.ISet`1
  commentId: T:System.Collections.Generic.ISet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  name: ISet<T>
  nameWithType: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  nameWithType.vb: ISet(Of T)
  fullName.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: LlamaLogic.Packages.Models.IModel.GetName*
  commentId: Overload:LlamaLogic.Packages.Models.IModel.GetName
  href: LlamaLogic.Packages.Models.IModel.html#LlamaLogic_Packages_Models_IModel_GetName_System_IO_Stream_
  name: GetName
  nameWithType: IModel.GetName
  fullName: LlamaLogic.Packages.Models.IModel.GetName
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: LlamaLogic.Packages.Models.IModel.GetNameAsync*
  commentId: Overload:LlamaLogic.Packages.Models.IModel.GetNameAsync
  href: LlamaLogic.Packages.Models.IModel.html#LlamaLogic_Packages_Models_IModel_GetNameAsync_System_IO_Stream_System_Threading_CancellationToken_
  name: GetNameAsync
  nameWithType: IModel.GetNameAsync
  fullName: LlamaLogic.Packages.Models.IModel.GetNameAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: LlamaLogic.Packages.Models.IModel.ResourceName*
  commentId: Overload:LlamaLogic.Packages.Models.IModel.ResourceName
  href: LlamaLogic.Packages.Models.IModel.html#LlamaLogic_Packages_Models_IModel_ResourceName
  name: ResourceName
  nameWithType: IModel.ResourceName
  fullName: LlamaLogic.Packages.Models.IModel.ResourceName
- uid: LlamaLogic.Packages.Models.IModel.Encode*
  commentId: Overload:LlamaLogic.Packages.Models.IModel.Encode
  href: LlamaLogic.Packages.Models.IModel.html#LlamaLogic_Packages_Models_IModel_Encode
  name: Encode
  nameWithType: IModel.Encode
  fullName: LlamaLogic.Packages.Models.IModel.Encode
- uid: System.ReadOnlyMemory{System.Byte}
  commentId: T:System.ReadOnlyMemory{System.Byte}
  parent: System
  definition: System.ReadOnlyMemory`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<byte>
  nameWithType: ReadOnlyMemory<byte>
  fullName: System.ReadOnlyMemory<byte>
  nameWithType.vb: ReadOnlyMemory(Of Byte)
  fullName.vb: System.ReadOnlyMemory(Of Byte)
  name.vb: ReadOnlyMemory(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.ReadOnlyMemory`1
  commentId: T:System.ReadOnlyMemory`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<T>
  nameWithType: ReadOnlyMemory<T>
  fullName: System.ReadOnlyMemory<T>
  nameWithType.vb: ReadOnlyMemory(Of T)
  fullName.vb: System.ReadOnlyMemory(Of T)
  name.vb: ReadOnlyMemory(Of T)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
