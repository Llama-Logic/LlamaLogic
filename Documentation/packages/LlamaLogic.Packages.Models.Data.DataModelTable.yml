### YamlMime:ManagedReference
items:
- uid: LlamaLogic.Packages.Models.Data.DataModelTable
  commentId: T:LlamaLogic.Packages.Models.Data.DataModelTable
  id: DataModelTable
  parent: LlamaLogic.Packages.Models.Data
  children:
  - LlamaLogic.Packages.Models.Data.DataModelTable.#ctor(System.String,System.String,System.Nullable{System.UInt32})
  - LlamaLogic.Packages.Models.Data.DataModelTable.AddColumn(System.String,LlamaLogic.Packages.Models.Data.DataModelType,System.UInt16,System.Collections.Generic.IEnumerable{System.Object})
  - LlamaLogic.Packages.Models.Data.DataModelTable.AddRow(System.Object)
  - LlamaLogic.Packages.Models.Data.DataModelTable.ColumnCount
  - LlamaLogic.Packages.Models.Data.DataModelTable.Get(System.Index)
  - LlamaLogic.Packages.Models.Data.DataModelTable.Get(System.Index,System.Index)
  - LlamaLogic.Packages.Models.Data.DataModelTable.Get(System.Index,System.String)
  - LlamaLogic.Packages.Models.Data.DataModelTable.Get(System.Int32)
  - LlamaLogic.Packages.Models.Data.DataModelTable.Get(System.Int32,System.Int32)
  - LlamaLogic.Packages.Models.Data.DataModelTable.Get(System.Int32,System.String)
  - LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnFlags(System.Index)
  - LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnFlags(System.Int32)
  - LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnFlags(System.String)
  - LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnName(System.Index)
  - LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnName(System.Int32)
  - LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnType(System.Index)
  - LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnType(System.Int32)
  - LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnType(System.String)
  - LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.Index)
  - LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.Index,System.Index,System.Predicate{System.Object})
  - LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.Index,System.Range)
  - LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.Int32)
  - LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.Int32,System.Int32,System.Int32)
  - LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.Int32,System.Int32,System.Predicate{System.Object})
  - LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.String)
  - LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.String,System.Index,System.Predicate{System.Object})
  - LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.String,System.Int32,System.Int32)
  - LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.String,System.Int32,System.Predicate{System.Object})
  - LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.String,System.Range)
  - LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValue(System.Index)
  - LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValue(System.Int32)
  - LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValues(System.Int32,System.Int32)
  - LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValues(System.Range)
  - LlamaLogic.Packages.Models.Data.DataModelTable.InsertColumn(System.Index,System.String,LlamaLogic.Packages.Models.Data.DataModelType,System.UInt16,System.Collections.Generic.IEnumerable{System.Object})
  - LlamaLogic.Packages.Models.Data.DataModelTable.InsertColumn(System.Int32,System.String,LlamaLogic.Packages.Models.Data.DataModelType,System.UInt16,System.Collections.Generic.IEnumerable{System.Object})
  - LlamaLogic.Packages.Models.Data.DataModelTable.InsertRow(System.Index,System.Object)
  - LlamaLogic.Packages.Models.Data.DataModelTable.InsertRow(System.Int32,System.Object)
  - LlamaLogic.Packages.Models.Data.DataModelTable.Item(System.Index)
  - LlamaLogic.Packages.Models.Data.DataModelTable.Item(System.Index,System.Index)
  - LlamaLogic.Packages.Models.Data.DataModelTable.Item(System.Index,System.String)
  - LlamaLogic.Packages.Models.Data.DataModelTable.Item(System.Int32)
  - LlamaLogic.Packages.Models.Data.DataModelTable.Item(System.Int32,System.Int32)
  - LlamaLogic.Packages.Models.Data.DataModelTable.Item(System.Int32,System.String)
  - LlamaLogic.Packages.Models.Data.DataModelTable.Name
  - LlamaLogic.Packages.Models.Data.DataModelTable.RawValues
  - LlamaLogic.Packages.Models.Data.DataModelTable.RemoveColumn(System.Index)
  - LlamaLogic.Packages.Models.Data.DataModelTable.RemoveColumn(System.Int32)
  - LlamaLogic.Packages.Models.Data.DataModelTable.RemoveColumn(System.String)
  - LlamaLogic.Packages.Models.Data.DataModelTable.RemoveRow(System.Index)
  - LlamaLogic.Packages.Models.Data.DataModelTable.RemoveRow(System.Int32)
  - LlamaLogic.Packages.Models.Data.DataModelTable.RowCount
  - LlamaLogic.Packages.Models.Data.DataModelTable.SchemaHash
  - LlamaLogic.Packages.Models.Data.DataModelTable.SchemaName
  - LlamaLogic.Packages.Models.Data.DataModelTable.Set(System.Index,System.Index,System.Object)
  - LlamaLogic.Packages.Models.Data.DataModelTable.Set(System.Index,System.Object)
  - LlamaLogic.Packages.Models.Data.DataModelTable.Set(System.Index,System.String,System.Object)
  - LlamaLogic.Packages.Models.Data.DataModelTable.Set(System.Int32,System.Int32,System.Object)
  - LlamaLogic.Packages.Models.Data.DataModelTable.Set(System.Int32,System.Object)
  - LlamaLogic.Packages.Models.Data.DataModelTable.Set(System.Int32,System.String,System.Object)
  - LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnFlags(System.Index,System.UInt16)
  - LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnFlags(System.Int32,System.UInt16)
  - LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnFlags(System.String,System.UInt16)
  - LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnName(System.Index,System.String)
  - LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnName(System.Int32,System.String)
  - LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValue(System.Index,System.Object)
  - LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValue(System.Int32,System.Object)
  - LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValues(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Object})
  - LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValues(System.Range,System.Collections.Generic.IEnumerable{System.Object})
  langs:
  - csharp
  - vb
  name: DataModelTable
  nameWithType: DataModelTable
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable
  type: Class
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: DataModelTable
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 5
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: "Represents a table in a <xref href=\"LlamaLogic.Packages.ResourceType.SimData\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"LlamaLogic.Packages.ResourceType.CombinedTuning\" data-throw-if-not-resolved=\"false\"></xref> resource (\U0001F513)"
  example: []
  syntax:
    content: public sealed class DataModelTable
    content.vb: Public NotInheritable Class DataModelTable
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.#ctor(System.String,System.String,System.Nullable{System.UInt32})
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.#ctor(System.String,System.String,System.Nullable{System.UInt32})
  id: '#ctor(System.String,System.String,System.Nullable{System.UInt32})'
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: DataModelTable(string?, string?, uint?)
  nameWithType: DataModelTable.DataModelTable(string?, string?, uint?)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.DataModelTable(string?, string?, uint?)
  type: Constructor
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: .ctor
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 5
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: "Represents a table in a <xref href=\"LlamaLogic.Packages.ResourceType.SimData\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"LlamaLogic.Packages.ResourceType.CombinedTuning\" data-throw-if-not-resolved=\"false\"></xref> resource (\U0001F513)"
  example: []
  syntax:
    content: public DataModelTable(string? name, string? schemaName, uint? schemaHash)
    parameters:
    - id: name
      type: System.String
    - id: schemaName
      type: System.String
    - id: schemaHash
      type: System.Nullable{System.UInt32}
    content.vb: Public Sub New(name As String, schemaName As String, schemaHash As UInteger?)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.#ctor*
  nameWithType.vb: DataModelTable.New(String, String, UInteger?)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.New(String, String, UInteger?)
  name.vb: New(String, String, UInteger?)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.ColumnCount
  commentId: P:LlamaLogic.Packages.Models.Data.DataModelTable.ColumnCount
  id: ColumnCount
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: ColumnCount
  nameWithType: DataModelTable.ColumnCount
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.ColumnCount
  type: Property
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: ColumnCount
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 15
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the number of columns
  example: []
  syntax:
    content: public int ColumnCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ColumnCount As Integer
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.ColumnCount*
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.Name
  commentId: P:LlamaLogic.Packages.Models.Data.DataModelTable.Name
  id: Name
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: DataModelTable.Name
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.Name
  type: Property
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: Name
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 21
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets/sets the name of the table
  example: []
  syntax:
    content: public string? Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.Name*
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.RawValues
  commentId: P:LlamaLogic.Packages.Models.Data.DataModelTable.RawValues
  id: RawValues
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: RawValues
  nameWithType: DataModelTable.RawValues
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.RawValues
  type: Property
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: RawValues
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 26
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the raw values of the table
  example: []
  syntax:
    content: public IEnumerable<object?> RawValues { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Object}
    content.vb: Public ReadOnly Property RawValues As IEnumerable(Of Object)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.RawValues*
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.RowCount
  commentId: P:LlamaLogic.Packages.Models.Data.DataModelTable.RowCount
  id: RowCount
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: RowCount
  nameWithType: DataModelTable.RowCount
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.RowCount
  type: Property
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: RowCount
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 32
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the number of rows
  example: []
  syntax:
    content: public int RowCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property RowCount As Integer
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.RowCount*
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.SchemaHash
  commentId: P:LlamaLogic.Packages.Models.Data.DataModelTable.SchemaHash
  id: SchemaHash
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: SchemaHash
  nameWithType: DataModelTable.SchemaHash
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.SchemaHash
  type: Property
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: SchemaHash
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 109
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets/sets the unique identifier for the schema of the table
  example: []
  syntax:
    content: public uint? SchemaHash { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.UInt32}
    content.vb: Public Property SchemaHash As UInteger?
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.SchemaHash*
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.SchemaName
  commentId: P:LlamaLogic.Packages.Models.Data.DataModelTable.SchemaName
  id: SchemaName
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: SchemaName
  nameWithType: DataModelTable.SchemaName
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.SchemaName
  type: Property
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: SchemaName
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 114
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets/sets the name of the schema of the table
  example: []
  syntax:
    content: public string? SchemaName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SchemaName As String
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.SchemaName*
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.Item(System.Index)
  commentId: P:LlamaLogic.Packages.Models.Data.DataModelTable.Item(System.Index)
  id: Item(System.Index)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: this[Index]
  nameWithType: DataModelTable.this[Index]
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.this[System.Index]
  type: Property
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: this[]
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 119
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets/sets the values of the specified <code class="paramref">rowIndex</code>
  example: []
  syntax:
    content: public object? this[Index rowIndex] { get; set; }
    parameters:
    - id: rowIndex
      type: System.Index
    return:
      type: System.Object
    content.vb: Public Default Property this[](rowIndex As Index) As Object
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.Item*
  nameWithType.vb: DataModelTable.this[](Index)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.this[](System.Index)
  name.vb: this[](Index)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.Item(System.Int32)
  commentId: P:LlamaLogic.Packages.Models.Data.DataModelTable.Item(System.Int32)
  id: Item(System.Int32)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: DataModelTable.this[int]
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.this[int]
  type: Property
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: this[]
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 128
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets/sets the values of the specified <code class="paramref">rowIndex</code>
  example: []
  syntax:
    content: public object? this[int rowIndex] { get; set; }
    parameters:
    - id: rowIndex
      type: System.Int32
    return:
      type: System.Object
    content.vb: Public Default Property this[](rowIndex As Integer) As Object
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.Item*
  nameWithType.vb: DataModelTable.this[](Integer)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.this[](Integer)
  name.vb: this[](Integer)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.Item(System.Index,System.Index)
  commentId: P:LlamaLogic.Packages.Models.Data.DataModelTable.Item(System.Index,System.Index)
  id: Item(System.Index,System.Index)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: this[Index, Index]
  nameWithType: DataModelTable.this[Index, Index]
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.this[System.Index, System.Index]
  type: Property
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: this[]
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 137
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets/sets the value at the specified <code class="paramref">rowIndex</code> and <code class="paramref">columnIndex</code>
  example: []
  syntax:
    content: public object? this[Index rowIndex, Index columnIndex] { get; set; }
    parameters:
    - id: rowIndex
      type: System.Index
    - id: columnIndex
      type: System.Index
    return:
      type: System.Object
    content.vb: Public Default Property this[](rowIndex As Index, columnIndex As Index) As Object
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.Item*
  nameWithType.vb: DataModelTable.this[](Index, Index)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.this[](System.Index, System.Index)
  name.vb: this[](Index, Index)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.Item(System.Int32,System.Int32)
  commentId: P:LlamaLogic.Packages.Models.Data.DataModelTable.Item(System.Int32,System.Int32)
  id: Item(System.Int32,System.Int32)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: this[int, int]
  nameWithType: DataModelTable.this[int, int]
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.this[int, int]
  type: Property
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: this[]
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 146
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets/sets the value at the specified <code class="paramref">rowIndex</code> and <code class="paramref">columnIndex</code>
  example: []
  syntax:
    content: public object? this[int rowIndex, int columnIndex] { get; set; }
    parameters:
    - id: rowIndex
      type: System.Int32
    - id: columnIndex
      type: System.Int32
    return:
      type: System.Object
    content.vb: Public Default Property this[](rowIndex As Integer, columnIndex As Integer) As Object
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.Item*
  nameWithType.vb: DataModelTable.this[](Integer, Integer)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.this[](Integer, Integer)
  name.vb: this[](Integer, Integer)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.Item(System.Index,System.String)
  commentId: P:LlamaLogic.Packages.Models.Data.DataModelTable.Item(System.Index,System.String)
  id: Item(System.Index,System.String)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: this[Index, string]
  nameWithType: DataModelTable.this[Index, string]
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.this[System.Index, string]
  type: Property
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: this[]
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 155
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets/sets the value of the specified <code class="paramref">rowIndex</code> for column with the specified <code class="paramref">columnName</code>
  example: []
  syntax:
    content: public object? this[Index rowIndex, string columnName] { get; set; }
    parameters:
    - id: rowIndex
      type: System.Index
    - id: columnName
      type: System.String
    return:
      type: System.Object
    content.vb: Public Default Property this[](rowIndex As Index, columnName As String) As Object
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.Item*
  nameWithType.vb: DataModelTable.this[](Index, String)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.this[](System.Index, String)
  name.vb: this[](Index, String)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.Item(System.Int32,System.String)
  commentId: P:LlamaLogic.Packages.Models.Data.DataModelTable.Item(System.Int32,System.String)
  id: Item(System.Int32,System.String)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: this[int, string]
  nameWithType: DataModelTable.this[int, string]
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.this[int, string]
  type: Property
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: this[]
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 164
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets/sets the value of the specified <code class="paramref">rowIndex</code> for column with the specified <code class="paramref">columnName</code>
  example: []
  syntax:
    content: public object? this[int rowIndex, string columnName] { get; set; }
    parameters:
    - id: rowIndex
      type: System.Int32
    - id: columnName
      type: System.String
    return:
      type: System.Object
    content.vb: Public Default Property this[](rowIndex As Integer, columnName As String) As Object
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.Item*
  nameWithType.vb: DataModelTable.this[](Integer, String)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.this[](Integer, String)
  name.vb: this[](Integer, String)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.AddColumn(System.String,LlamaLogic.Packages.Models.Data.DataModelType,System.UInt16,System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.AddColumn(System.String,LlamaLogic.Packages.Models.Data.DataModelType,System.UInt16,System.Collections.Generic.IEnumerable{System.Object})
  id: AddColumn(System.String,LlamaLogic.Packages.Models.Data.DataModelType,System.UInt16,System.Collections.Generic.IEnumerable{System.Object})
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: AddColumn(string?, DataModelType, ushort, IEnumerable<object?>?)
  nameWithType: DataModelTable.AddColumn(string?, DataModelType, ushort, IEnumerable<object?>?)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.AddColumn(string?, LlamaLogic.Packages.Models.Data.DataModelType, ushort, System.Collections.Generic.IEnumerable<object?>?)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: AddColumn
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 176
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Adds a column with the specified <code class="paramref">name</code>, <code class="paramref">type</code>, <code class="paramref">flags</code>, and <code class="paramref">values</code>, and returns the index of the column
  example: []
  syntax:
    content: public int AddColumn(string? name, DataModelType type, ushort flags = 0, IEnumerable<object?>? values = null)
    parameters:
    - id: name
      type: System.String
    - id: type
      type: LlamaLogic.Packages.Models.Data.DataModelType
    - id: flags
      type: System.UInt16
    - id: values
      type: System.Collections.Generic.IEnumerable{System.Object}
    return:
      type: System.Int32
    content.vb: Public Function AddColumn(name As String, type As DataModelType, flags As UShort = 0, values As IEnumerable(Of Object) = Nothing) As Integer
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.AddColumn*
  nameWithType.vb: DataModelTable.AddColumn(String, DataModelType, UShort, IEnumerable(Of Object))
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.AddColumn(String, LlamaLogic.Packages.Models.Data.DataModelType, UShort, System.Collections.Generic.IEnumerable(Of Object))
  name.vb: AddColumn(String, DataModelType, UShort, IEnumerable(Of Object))
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.AddRow(System.Object)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.AddRow(System.Object)
  id: AddRow(System.Object)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: AddRow(object?)
  nameWithType: DataModelTable.AddRow(object?)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.AddRow(object?)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: AddRow
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 186
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Adds the specified <code class="paramref">row</code> and returns the index of the row
  example: []
  syntax:
    content: public int AddRow(object? row)
    parameters:
    - id: row
      type: System.Object
    return:
      type: System.Int32
    content.vb: Public Function AddRow(row As Object) As Integer
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.AddRow*
  nameWithType.vb: DataModelTable.AddRow(Object)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.AddRow(Object)
  name.vb: AddRow(Object)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.Get(System.Index)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.Get(System.Index)
  id: Get(System.Index)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: Get(Index)
  nameWithType: DataModelTable.Get(Index)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.Get(System.Index)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: Get
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 204
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the values of the row at the specified <code class="paramref">rowIndex</code>
  example: []
  syntax:
    content: public object? Get(Index rowIndex)
    parameters:
    - id: rowIndex
      type: System.Index
    return:
      type: System.Object
    content.vb: Public Function [Get](rowIndex As Index) As Object
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.Get*
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.Get(System.Int32)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.Get(System.Int32)
  id: Get(System.Int32)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: Get(int)
  nameWithType: DataModelTable.Get(int)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.Get(int)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: Get
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 217
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the values of the row at the specified <code class="paramref">rowIndex</code>
  example: []
  syntax:
    content: public object? Get(int rowIndex)
    parameters:
    - id: rowIndex
      type: System.Int32
    return:
      type: System.Object
    content.vb: Public Function [Get](rowIndex As Integer) As Object
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.Get*
  nameWithType.vb: DataModelTable.Get(Integer)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.Get(Integer)
  name.vb: Get(Integer)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.Get(System.Index,System.Index)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.Get(System.Index,System.Index)
  id: Get(System.Index,System.Index)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: Get(Index, Index)
  nameWithType: DataModelTable.Get(Index, Index)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.Get(System.Index, System.Index)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: Get
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 223
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the value at the specified <code class="paramref">rowIndex</code> and <code class="paramref">columnIndex</code>
  example: []
  syntax:
    content: public object? Get(Index rowIndex, Index columnIndex)
    parameters:
    - id: rowIndex
      type: System.Index
    - id: columnIndex
      type: System.Index
    return:
      type: System.Object
    content.vb: Public Function [Get](rowIndex As Index, columnIndex As Index) As Object
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.Get*
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.Get(System.Int32,System.Int32)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.Get(System.Int32,System.Int32)
  id: Get(System.Int32,System.Int32)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: Get(int, int)
  nameWithType: DataModelTable.Get(int, int)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.Get(int, int)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: Get
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 233
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the value at the specified <code class="paramref">rowIndex</code> and <code class="paramref">columnIndex</code>
  example: []
  syntax:
    content: public object? Get(int rowIndex, int columnIndex)
    parameters:
    - id: rowIndex
      type: System.Int32
    - id: columnIndex
      type: System.Int32
    return:
      type: System.Object
    content.vb: Public Function [Get](rowIndex As Integer, columnIndex As Integer) As Object
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.Get*
  nameWithType.vb: DataModelTable.Get(Integer, Integer)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.Get(Integer, Integer)
  name.vb: Get(Integer, Integer)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.Get(System.Index,System.String)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.Get(System.Index,System.String)
  id: Get(System.Index,System.String)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: Get(Index, string)
  nameWithType: DataModelTable.Get(Index, string)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.Get(System.Index, string)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: Get
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 239
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the value at the specified <code class="paramref">rowIndex</code> for the column with the specified <code class="paramref">columnName</code>
  example: []
  syntax:
    content: public object? Get(Index rowIndex, string columnName)
    parameters:
    - id: rowIndex
      type: System.Index
    - id: columnName
      type: System.String
    return:
      type: System.Object
    content.vb: Public Function [Get](rowIndex As Index, columnName As String) As Object
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.Get*
  nameWithType.vb: DataModelTable.Get(Index, String)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.Get(System.Index, String)
  name.vb: Get(Index, String)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.Get(System.Int32,System.String)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.Get(System.Int32,System.String)
  id: Get(System.Int32,System.String)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: Get(int, string)
  nameWithType: DataModelTable.Get(int, string)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.Get(int, string)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: Get
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 249
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the value at the specified <code class="paramref">rowIndex</code> for the column with the specified <code class="paramref">columnName</code>
  example: []
  syntax:
    content: public object? Get(int rowIndex, string columnName)
    parameters:
    - id: rowIndex
      type: System.Int32
    - id: columnName
      type: System.String
    return:
      type: System.Object
    content.vb: Public Function [Get](rowIndex As Integer, columnName As String) As Object
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.Get*
  nameWithType.vb: DataModelTable.Get(Integer, String)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.Get(Integer, String)
  name.vb: Get(Integer, String)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnFlags(System.Index)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnFlags(System.Index)
  id: GetColumnFlags(System.Index)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: GetColumnFlags(Index)
  nameWithType: DataModelTable.GetColumnFlags(Index)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnFlags(System.Index)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: GetColumnFlags
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 255
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the flags of the column at the specified <code class="paramref">index</code>
  example: []
  syntax:
    content: public ushort GetColumnFlags(Index index)
    parameters:
    - id: index
      type: System.Index
    return:
      type: System.UInt16
    content.vb: Public Function GetColumnFlags(index As Index) As UShort
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnFlags*
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnFlags(System.Int32)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnFlags(System.Int32)
  id: GetColumnFlags(System.Int32)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: GetColumnFlags(int)
  nameWithType: DataModelTable.GetColumnFlags(int)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnFlags(int)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: GetColumnFlags
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 264
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the flags of the column at the specified <code class="paramref">index</code>
  example: []
  syntax:
    content: public ushort GetColumnFlags(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.UInt16
    content.vb: Public Function GetColumnFlags(index As Integer) As UShort
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnFlags*
  nameWithType.vb: DataModelTable.GetColumnFlags(Integer)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnFlags(Integer)
  name.vb: GetColumnFlags(Integer)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnFlags(System.String)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnFlags(System.String)
  id: GetColumnFlags(System.String)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: GetColumnFlags(string)
  nameWithType: DataModelTable.GetColumnFlags(string)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnFlags(string)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: GetColumnFlags
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 270
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the flags of the column with the specified <code class="paramref">columnName</code>
  example: []
  syntax:
    content: public ushort GetColumnFlags(string columnName)
    parameters:
    - id: columnName
      type: System.String
    return:
      type: System.UInt16
    content.vb: Public Function GetColumnFlags(columnName As String) As UShort
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnFlags*
  nameWithType.vb: DataModelTable.GetColumnFlags(String)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnFlags(String)
  name.vb: GetColumnFlags(String)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnName(System.Index)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnName(System.Index)
  id: GetColumnName(System.Index)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: GetColumnName(Index)
  nameWithType: DataModelTable.GetColumnName(Index)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnName(System.Index)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: GetColumnName
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 280
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the name of the column at the specified <code class="paramref">index</code>
  example: []
  syntax:
    content: public string? GetColumnName(Index index)
    parameters:
    - id: index
      type: System.Index
    return:
      type: System.String
    content.vb: Public Function GetColumnName(index As Index) As String
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnName*
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnName(System.Int32)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnName(System.Int32)
  id: GetColumnName(System.Int32)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: GetColumnName(int)
  nameWithType: DataModelTable.GetColumnName(int)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnName(int)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: GetColumnName
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 289
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the name of the column at the specified <code class="paramref">index</code>
  example: []
  syntax:
    content: public string? GetColumnName(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Function GetColumnName(index As Integer) As String
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnName*
  nameWithType.vb: DataModelTable.GetColumnName(Integer)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnName(Integer)
  name.vb: GetColumnName(Integer)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnType(System.Index)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnType(System.Index)
  id: GetColumnType(System.Index)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: GetColumnType(Index)
  nameWithType: DataModelTable.GetColumnType(Index)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnType(System.Index)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: GetColumnType
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 295
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the <xref href="LlamaLogic.Packages.Models.Data.DataModelType" data-throw-if-not-resolved="false"></xref> of the column at the specified <code class="paramref">index</code>
  example: []
  syntax:
    content: public DataModelType GetColumnType(Index index)
    parameters:
    - id: index
      type: System.Index
    return:
      type: LlamaLogic.Packages.Models.Data.DataModelType
    content.vb: Public Function GetColumnType(index As Index) As DataModelType
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnType*
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnType(System.Int32)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnType(System.Int32)
  id: GetColumnType(System.Int32)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: GetColumnType(int)
  nameWithType: DataModelTable.GetColumnType(int)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnType(int)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: GetColumnType
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 304
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the <xref href="LlamaLogic.Packages.Models.Data.DataModelType" data-throw-if-not-resolved="false"></xref> of the column at the specified <code class="paramref">index</code>
  example: []
  syntax:
    content: public DataModelType GetColumnType(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: LlamaLogic.Packages.Models.Data.DataModelType
    content.vb: Public Function GetColumnType(index As Integer) As DataModelType
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnType*
  nameWithType.vb: DataModelTable.GetColumnType(Integer)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnType(Integer)
  name.vb: GetColumnType(Integer)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnType(System.String)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnType(System.String)
  id: GetColumnType(System.String)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: GetColumnType(string)
  nameWithType: DataModelTable.GetColumnType(string)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnType(string)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: GetColumnType
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 310
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the <xref href="LlamaLogic.Packages.Models.Data.DataModelType" data-throw-if-not-resolved="false"></xref> of the column with the specified <code class="paramref">columnName</code>
  example: []
  syntax:
    content: public DataModelType GetColumnType(string columnName)
    parameters:
    - id: columnName
      type: System.String
    return:
      type: LlamaLogic.Packages.Models.Data.DataModelType
    content.vb: Public Function GetColumnType(columnName As String) As DataModelType
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnType*
  nameWithType.vb: DataModelTable.GetColumnType(String)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnType(String)
  name.vb: GetColumnType(String)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.Index)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.Index)
  id: GetColumnValues(System.Index)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: GetColumnValues(Index)
  nameWithType: DataModelTable.GetColumnValues(Index)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.Index)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: GetColumnValues
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 320
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets all the values for the column at the specified <code class="paramref">index</code>
  example: []
  syntax:
    content: public IReadOnlyList<object?> GetColumnValues(Index index)
    parameters:
    - id: index
      type: System.Index
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Object}
    content.vb: Public Function GetColumnValues(index As Index) As IReadOnlyList(Of Object)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues*
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.Int32)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.Int32)
  id: GetColumnValues(System.Int32)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: GetColumnValues(int)
  nameWithType: DataModelTable.GetColumnValues(int)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(int)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: GetColumnValues
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 329
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets all the values for the column at the specified <code class="paramref">index</code>
  example: []
  syntax:
    content: public IReadOnlyList<object?> GetColumnValues(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Object}
    content.vb: Public Function GetColumnValues(index As Integer) As IReadOnlyList(Of Object)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues*
  nameWithType.vb: DataModelTable.GetColumnValues(Integer)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(Integer)
  name.vb: GetColumnValues(Integer)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.String)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.String)
  id: GetColumnValues(System.String)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: GetColumnValues(string)
  nameWithType: DataModelTable.GetColumnValues(string)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(string)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: GetColumnValues
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 335
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets all the values for the column with the specified <code class="paramref">columnName</code>
  example: []
  syntax:
    content: public IReadOnlyList<object?> GetColumnValues(string columnName)
    parameters:
    - id: columnName
      type: System.String
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Object}
    content.vb: Public Function GetColumnValues(columnName As String) As IReadOnlyList(Of Object)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues*
  nameWithType.vb: DataModelTable.GetColumnValues(String)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(String)
  name.vb: GetColumnValues(String)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.Index,System.Range)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.Index,System.Range)
  id: GetColumnValues(System.Index,System.Range)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: GetColumnValues(Index, Range)
  nameWithType: DataModelTable.GetColumnValues(Index, Range)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.Index, System.Range)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: GetColumnValues
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 345
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the values for the column at the specified <code class="paramref">columnIndex</code> for the specified <code class="paramref">rows</code>
  example: []
  syntax:
    content: public IReadOnlyList<object?> GetColumnValues(Index columnIndex, Range rows)
    parameters:
    - id: columnIndex
      type: System.Index
    - id: rows
      type: System.Range
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Object}
    content.vb: Public Function GetColumnValues(columnIndex As Index, rows As Range) As IReadOnlyList(Of Object)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues*
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.Int32,System.Int32,System.Int32)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.Int32,System.Int32,System.Int32)
  id: GetColumnValues(System.Int32,System.Int32,System.Int32)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: GetColumnValues(int, int, int)
  nameWithType: DataModelTable.GetColumnValues(int, int, int)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(int, int, int)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: GetColumnValues
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 354
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the values for the column at the specified <code class="paramref">columnIndex</code> for the specified number of <code class="paramref">rows</code> beginning at the specified <code class="paramref">rowIndex</code>
  example: []
  syntax:
    content: public IReadOnlyList<object?> GetColumnValues(int columnIndex, int rowIndex, int rows)
    parameters:
    - id: columnIndex
      type: System.Int32
    - id: rowIndex
      type: System.Int32
    - id: rows
      type: System.Int32
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Object}
    content.vb: Public Function GetColumnValues(columnIndex As Integer, rowIndex As Integer, rows As Integer) As IReadOnlyList(Of Object)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues*
  nameWithType.vb: DataModelTable.GetColumnValues(Integer, Integer, Integer)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(Integer, Integer, Integer)
  name.vb: GetColumnValues(Integer, Integer, Integer)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.String,System.Range)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.String,System.Range)
  id: GetColumnValues(System.String,System.Range)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: GetColumnValues(string, Range)
  nameWithType: DataModelTable.GetColumnValues(string, Range)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(string, System.Range)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: GetColumnValues
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 360
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the values for the column with the specified <code class="paramref">columnName</code> for the specified <code class="paramref">rows</code>
  example: []
  syntax:
    content: public IReadOnlyList<object?> GetColumnValues(string columnName, Range rows)
    parameters:
    - id: columnName
      type: System.String
    - id: rows
      type: System.Range
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Object}
    content.vb: Public Function GetColumnValues(columnName As String, rows As Range) As IReadOnlyList(Of Object)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues*
  nameWithType.vb: DataModelTable.GetColumnValues(String, Range)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(String, System.Range)
  name.vb: GetColumnValues(String, Range)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.String,System.Int32,System.Int32)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.String,System.Int32,System.Int32)
  id: GetColumnValues(System.String,System.Int32,System.Int32)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: GetColumnValues(string, int, int)
  nameWithType: DataModelTable.GetColumnValues(string, int, int)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(string, int, int)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: GetColumnValues
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 370
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the values for the column with the specified <code class="paramref">columnName</code> for the specified number of <code class="paramref">rows</code> beginning at the specified <code class="paramref">rowIndex</code>
  example: []
  syntax:
    content: public IReadOnlyList<object?> GetColumnValues(string columnName, int rowIndex, int rows)
    parameters:
    - id: columnName
      type: System.String
    - id: rowIndex
      type: System.Int32
    - id: rows
      type: System.Int32
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Object}
    content.vb: Public Function GetColumnValues(columnName As String, rowIndex As Integer, rows As Integer) As IReadOnlyList(Of Object)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues*
  nameWithType.vb: DataModelTable.GetColumnValues(String, Integer, Integer)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(String, Integer, Integer)
  name.vb: GetColumnValues(String, Integer, Integer)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.Index,System.Index,System.Predicate{System.Object})
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.Index,System.Index,System.Predicate{System.Object})
  id: GetColumnValues(System.Index,System.Index,System.Predicate{System.Object})
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: GetColumnValues(Index, Index, Predicate<object?>)
  nameWithType: DataModelTable.GetColumnValues(Index, Index, Predicate<object?>)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.Index, System.Index, System.Predicate<object?>)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: GetColumnValues
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 376
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the values for the specified <code class="paramref">columnIndex</code> starting at the specified <code class="paramref">startingRowIndex</code> for as long as the <code class="paramref">takeWhile</code> predicate returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>
  example: []
  syntax:
    content: public IReadOnlyList<object?> GetColumnValues(Index columnIndex, Index startingRowIndex, Predicate<object?> takeWhile)
    parameters:
    - id: columnIndex
      type: System.Index
    - id: startingRowIndex
      type: System.Index
    - id: takeWhile
      type: System.Predicate{System.Object}
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Object}
    content.vb: Public Function GetColumnValues(columnIndex As Index, startingRowIndex As Index, takeWhile As Predicate(Of Object)) As IReadOnlyList(Of Object)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues*
  nameWithType.vb: DataModelTable.GetColumnValues(Index, Index, Predicate(Of Object))
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.Index, System.Index, System.Predicate(Of Object))
  name.vb: GetColumnValues(Index, Index, Predicate(Of Object))
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.Int32,System.Int32,System.Predicate{System.Object})
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.Int32,System.Int32,System.Predicate{System.Object})
  id: GetColumnValues(System.Int32,System.Int32,System.Predicate{System.Object})
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: GetColumnValues(int, int, Predicate<object?>)
  nameWithType: DataModelTable.GetColumnValues(int, int, Predicate<object?>)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(int, int, System.Predicate<object?>)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: GetColumnValues
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 397
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the values for the specified <code class="paramref">columnIndex</code> starting at the specified <code class="paramref">startingRowIndex</code> for as long as the <code class="paramref">takeWhile</code> predicate returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>
  example: []
  syntax:
    content: public IReadOnlyList<object?> GetColumnValues(int columnIndex, int startingRowIndex, Predicate<object?> takeWhile)
    parameters:
    - id: columnIndex
      type: System.Int32
    - id: startingRowIndex
      type: System.Int32
    - id: takeWhile
      type: System.Predicate{System.Object}
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Object}
    content.vb: Public Function GetColumnValues(columnIndex As Integer, startingRowIndex As Integer, takeWhile As Predicate(Of Object)) As IReadOnlyList(Of Object)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues*
  nameWithType.vb: DataModelTable.GetColumnValues(Integer, Integer, Predicate(Of Object))
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(Integer, Integer, System.Predicate(Of Object))
  name.vb: GetColumnValues(Integer, Integer, Predicate(Of Object))
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.String,System.Index,System.Predicate{System.Object})
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.String,System.Index,System.Predicate{System.Object})
  id: GetColumnValues(System.String,System.Index,System.Predicate{System.Object})
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: GetColumnValues(string, Index, Predicate<object?>)
  nameWithType: DataModelTable.GetColumnValues(string, Index, Predicate<object?>)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(string, System.Index, System.Predicate<object?>)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: GetColumnValues
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 403
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the values for the column with the specified <code class="paramref">columnName</code> starting at the specified <code class="paramref">startingRowIndex</code> for as long as the <code class="paramref">takeWhile</code> predicate returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>
  example: []
  syntax:
    content: public IReadOnlyList<object?> GetColumnValues(string columnName, Index startingRowIndex, Predicate<object?> takeWhile)
    parameters:
    - id: columnName
      type: System.String
    - id: startingRowIndex
      type: System.Index
    - id: takeWhile
      type: System.Predicate{System.Object}
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Object}
    content.vb: Public Function GetColumnValues(columnName As String, startingRowIndex As Index, takeWhile As Predicate(Of Object)) As IReadOnlyList(Of Object)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues*
  nameWithType.vb: DataModelTable.GetColumnValues(String, Index, Predicate(Of Object))
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(String, System.Index, System.Predicate(Of Object))
  name.vb: GetColumnValues(String, Index, Predicate(Of Object))
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.String,System.Int32,System.Predicate{System.Object})
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(System.String,System.Int32,System.Predicate{System.Object})
  id: GetColumnValues(System.String,System.Int32,System.Predicate{System.Object})
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: GetColumnValues(string, int, Predicate<object?>)
  nameWithType: DataModelTable.GetColumnValues(string, int, Predicate<object?>)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(string, int, System.Predicate<object?>)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: GetColumnValues
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 413
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the values for the column with the specified <code class="paramref">columnName</code> starting at the specified <code class="paramref">startingRowIndex</code> for as long as the <code class="paramref">takeWhile</code> predicate returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>
  example: []
  syntax:
    content: public IReadOnlyList<object?> GetColumnValues(string columnName, int startingRowIndex, Predicate<object?> takeWhile)
    parameters:
    - id: columnName
      type: System.String
    - id: startingRowIndex
      type: System.Int32
    - id: takeWhile
      type: System.Predicate{System.Object}
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Object}
    content.vb: Public Function GetColumnValues(columnName As String, startingRowIndex As Integer, takeWhile As Predicate(Of Object)) As IReadOnlyList(Of Object)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues*
  nameWithType.vb: DataModelTable.GetColumnValues(String, Integer, Predicate(Of Object))
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues(String, Integer, System.Predicate(Of Object))
  name.vb: GetColumnValues(String, Integer, Predicate(Of Object))
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValue(System.Index)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValue(System.Index)
  id: GetRawValue(System.Index)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: GetRawValue(Index)
  nameWithType: DataModelTable.GetRawValue(Index)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValue(System.Index)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: GetRawValue
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 419
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the value of a raw table for the specified <code class="paramref">row</code>
  example: []
  syntax:
    content: public object? GetRawValue(Index row)
    parameters:
    - id: row
      type: System.Index
    return:
      type: System.Object
    content.vb: Public Function GetRawValue(row As Index) As Object
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValue*
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValue(System.Int32)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValue(System.Int32)
  id: GetRawValue(System.Int32)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: GetRawValue(int)
  nameWithType: DataModelTable.GetRawValue(int)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValue(int)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: GetRawValue
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 429
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the value of a raw table for the specified <code class="paramref">row</code>
  example: []
  syntax:
    content: public object? GetRawValue(int row)
    parameters:
    - id: row
      type: System.Int32
    return:
      type: System.Object
    content.vb: Public Function GetRawValue(row As Integer) As Object
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValue*
  nameWithType.vb: DataModelTable.GetRawValue(Integer)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValue(Integer)
  name.vb: GetRawValue(Integer)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValues(System.Range)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValues(System.Range)
  id: GetRawValues(System.Range)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: GetRawValues(Range)
  nameWithType: DataModelTable.GetRawValues(Range)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValues(System.Range)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: GetRawValues
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 435
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the values of a raw table for the specified <code class="paramref">rows</code>
  example: []
  syntax:
    content: public IReadOnlyList<object?> GetRawValues(Range rows)
    parameters:
    - id: rows
      type: System.Range
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Object}
    content.vb: Public Function GetRawValues(rows As Range) As IReadOnlyList(Of Object)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValues*
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValues(System.Int32,System.Int32)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValues(System.Int32,System.Int32)
  id: GetRawValues(System.Int32,System.Int32)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: GetRawValues(int, int)
  nameWithType: DataModelTable.GetRawValues(int, int)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValues(int, int)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: GetRawValues
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 445
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Gets the values of a raw table for the specified number of <code class="paramref">rows</code> beginning at the specified <code class="paramref">rowIndex</code>
  example: []
  syntax:
    content: public IReadOnlyList<object?> GetRawValues(int rowIndex, int rows)
    parameters:
    - id: rowIndex
      type: System.Int32
    - id: rows
      type: System.Int32
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Object}
    content.vb: Public Function GetRawValues(rowIndex As Integer, rows As Integer) As IReadOnlyList(Of Object)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValues*
  nameWithType.vb: DataModelTable.GetRawValues(Integer, Integer)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValues(Integer, Integer)
  name.vb: GetRawValues(Integer, Integer)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.InsertColumn(System.Index,System.String,LlamaLogic.Packages.Models.Data.DataModelType,System.UInt16,System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.InsertColumn(System.Index,System.String,LlamaLogic.Packages.Models.Data.DataModelType,System.UInt16,System.Collections.Generic.IEnumerable{System.Object})
  id: InsertColumn(System.Index,System.String,LlamaLogic.Packages.Models.Data.DataModelType,System.UInt16,System.Collections.Generic.IEnumerable{System.Object})
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: InsertColumn(Index, string?, DataModelType, ushort, IEnumerable<object?>?)
  nameWithType: DataModelTable.InsertColumn(Index, string?, DataModelType, ushort, IEnumerable<object?>?)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.InsertColumn(System.Index, string?, LlamaLogic.Packages.Models.Data.DataModelType, ushort, System.Collections.Generic.IEnumerable<object?>?)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: InsertColumn
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 451
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Inserts a column with the specified <code class="paramref">name</code>, <code class="paramref">type</code>, and <code class="paramref">flags</code> at the specified <code class="paramref">index</code>
  example: []
  syntax:
    content: public void InsertColumn(Index index, string? name, DataModelType type, ushort flags = 0, IEnumerable<object?>? values = null)
    parameters:
    - id: index
      type: System.Index
    - id: name
      type: System.String
    - id: type
      type: LlamaLogic.Packages.Models.Data.DataModelType
    - id: flags
      type: System.UInt16
    - id: values
      type: System.Collections.Generic.IEnumerable{System.Object}
    content.vb: Public Sub InsertColumn(index As Index, name As String, type As DataModelType, flags As UShort = 0, values As IEnumerable(Of Object) = Nothing)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.InsertColumn*
  nameWithType.vb: DataModelTable.InsertColumn(Index, String, DataModelType, UShort, IEnumerable(Of Object))
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.InsertColumn(System.Index, String, LlamaLogic.Packages.Models.Data.DataModelType, UShort, System.Collections.Generic.IEnumerable(Of Object))
  name.vb: InsertColumn(Index, String, DataModelType, UShort, IEnumerable(Of Object))
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.InsertColumn(System.Int32,System.String,LlamaLogic.Packages.Models.Data.DataModelType,System.UInt16,System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.InsertColumn(System.Int32,System.String,LlamaLogic.Packages.Models.Data.DataModelType,System.UInt16,System.Collections.Generic.IEnumerable{System.Object})
  id: InsertColumn(System.Int32,System.String,LlamaLogic.Packages.Models.Data.DataModelType,System.UInt16,System.Collections.Generic.IEnumerable{System.Object})
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: InsertColumn(int, string?, DataModelType, ushort, IEnumerable<object?>?)
  nameWithType: DataModelTable.InsertColumn(int, string?, DataModelType, ushort, IEnumerable<object?>?)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.InsertColumn(int, string?, LlamaLogic.Packages.Models.Data.DataModelType, ushort, System.Collections.Generic.IEnumerable<object?>?)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: InsertColumn
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 468
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Inserts a column with the specified <code class="paramref">name</code>, <code class="paramref">type</code>, and <code class="paramref">flags</code> at the specified <code class="paramref">index</code>
  example: []
  syntax:
    content: public void InsertColumn(int index, string? name, DataModelType type, ushort flags = 0, IEnumerable<object?>? values = null)
    parameters:
    - id: index
      type: System.Int32
    - id: name
      type: System.String
    - id: type
      type: LlamaLogic.Packages.Models.Data.DataModelType
    - id: flags
      type: System.UInt16
    - id: values
      type: System.Collections.Generic.IEnumerable{System.Object}
    content.vb: Public Sub InsertColumn(index As Integer, name As String, type As DataModelType, flags As UShort = 0, values As IEnumerable(Of Object) = Nothing)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.InsertColumn*
  nameWithType.vb: DataModelTable.InsertColumn(Integer, String, DataModelType, UShort, IEnumerable(Of Object))
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.InsertColumn(Integer, String, LlamaLogic.Packages.Models.Data.DataModelType, UShort, System.Collections.Generic.IEnumerable(Of Object))
  name.vb: InsertColumn(Integer, String, DataModelType, UShort, IEnumerable(Of Object))
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.InsertRow(System.Index,System.Object)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.InsertRow(System.Index,System.Object)
  id: InsertRow(System.Index,System.Object)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: InsertRow(Index, object?)
  nameWithType: DataModelTable.InsertRow(Index, object?)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.InsertRow(System.Index, object?)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: InsertRow
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 474
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Inserts the specified <code class="paramref">row</code> at the specified <code class="paramref">index</code>
  example: []
  syntax:
    content: public void InsertRow(Index index, object? row)
    parameters:
    - id: index
      type: System.Index
    - id: row
      type: System.Object
    content.vb: Public Sub InsertRow(index As Index, row As Object)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.InsertRow*
  nameWithType.vb: DataModelTable.InsertRow(Index, Object)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.InsertRow(System.Index, Object)
  name.vb: InsertRow(Index, Object)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.InsertRow(System.Int32,System.Object)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.InsertRow(System.Int32,System.Object)
  id: InsertRow(System.Int32,System.Object)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: InsertRow(int, object?)
  nameWithType: DataModelTable.InsertRow(int, object?)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.InsertRow(int, object?)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: InsertRow
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 496
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Inserts the specified <code class="paramref">row</code> at the specified <code class="paramref">index</code>
  example: []
  syntax:
    content: public void InsertRow(int index, object? row)
    parameters:
    - id: index
      type: System.Int32
    - id: row
      type: System.Object
    content.vb: Public Sub InsertRow(index As Integer, row As Object)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.InsertRow*
  nameWithType.vb: DataModelTable.InsertRow(Integer, Object)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.InsertRow(Integer, Object)
  name.vb: InsertRow(Integer, Object)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.RemoveColumn(System.Index)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.RemoveColumn(System.Index)
  id: RemoveColumn(System.Index)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: RemoveColumn(Index)
  nameWithType: DataModelTable.RemoveColumn(Index)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.RemoveColumn(System.Index)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: RemoveColumn
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 508
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Removes the column at the specified <code class="paramref">index</code>
  example: []
  syntax:
    content: public void RemoveColumn(Index index)
    parameters:
    - id: index
      type: System.Index
    content.vb: Public Sub RemoveColumn(index As Index)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.RemoveColumn*
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.RemoveColumn(System.Int32)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.RemoveColumn(System.Int32)
  id: RemoveColumn(System.Int32)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: RemoveColumn(int)
  nameWithType: DataModelTable.RemoveColumn(int)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.RemoveColumn(int)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: RemoveColumn
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 519
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Removes the column at the specified <code class="paramref">index</code>
  example: []
  syntax:
    content: public void RemoveColumn(int index)
    parameters:
    - id: index
      type: System.Int32
    content.vb: Public Sub RemoveColumn(index As Integer)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.RemoveColumn*
  nameWithType.vb: DataModelTable.RemoveColumn(Integer)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.RemoveColumn(Integer)
  name.vb: RemoveColumn(Integer)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.RemoveColumn(System.String)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.RemoveColumn(System.String)
  id: RemoveColumn(System.String)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: RemoveColumn(string)
  nameWithType: DataModelTable.RemoveColumn(string)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.RemoveColumn(string)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: RemoveColumn
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 525
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Removes the column with the specified <code class="paramref">columnName</code> and returns the index at which the column was removed
  example: []
  syntax:
    content: public int RemoveColumn(string columnName)
    parameters:
    - id: columnName
      type: System.String
    return:
      type: System.Int32
    content.vb: Public Function RemoveColumn(columnName As String) As Integer
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.RemoveColumn*
  nameWithType.vb: DataModelTable.RemoveColumn(String)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.RemoveColumn(String)
  name.vb: RemoveColumn(String)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.RemoveRow(System.Index)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.RemoveRow(System.Index)
  id: RemoveRow(System.Index)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: RemoveRow(Index)
  nameWithType: DataModelTable.RemoveRow(Index)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.RemoveRow(System.Index)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: RemoveRow
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 538
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Removes the row at the specified <code class="paramref">index</code>
  example: []
  syntax:
    content: public void RemoveRow(Index index)
    parameters:
    - id: index
      type: System.Index
    content.vb: Public Sub RemoveRow(index As Index)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.RemoveRow*
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.RemoveRow(System.Int32)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.RemoveRow(System.Int32)
  id: RemoveRow(System.Int32)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: RemoveRow(int)
  nameWithType: DataModelTable.RemoveRow(int)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.RemoveRow(int)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: RemoveRow
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 551
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Removes the row at the specified <code class="paramref">index</code>
  example: []
  syntax:
    content: public void RemoveRow(int index)
    parameters:
    - id: index
      type: System.Int32
    content.vb: Public Sub RemoveRow(index As Integer)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.RemoveRow*
  nameWithType.vb: DataModelTable.RemoveRow(Integer)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.RemoveRow(Integer)
  name.vb: RemoveRow(Integer)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.Set(System.Index,System.Object)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.Set(System.Index,System.Object)
  id: Set(System.Index,System.Object)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: Set(Index, object?)
  nameWithType: DataModelTable.Set(Index, object?)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.Set(System.Index, object?)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: Set
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 557
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Sets the <code class="paramref">row</code> at the specified <code class="paramref">index</code>
  example: []
  syntax:
    content: public void Set(Index index, object? row)
    parameters:
    - id: index
      type: System.Index
    - id: row
      type: System.Object
    content.vb: Public Sub [Set](index As Index, row As Object)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.Set*
  nameWithType.vb: DataModelTable.Set(Index, Object)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.Set(System.Index, Object)
  name.vb: Set(Index, Object)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.Set(System.Int32,System.Object)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.Set(System.Int32,System.Object)
  id: Set(System.Int32,System.Object)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: Set(int, object?)
  nameWithType: DataModelTable.Set(int, object?)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.Set(int, object?)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: Set
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 575
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Sets the <code class="paramref">row</code> at the specified <code class="paramref">index</code>
  example: []
  syntax:
    content: public void Set(int index, object? row)
    parameters:
    - id: index
      type: System.Int32
    - id: row
      type: System.Object
    content.vb: Public Sub [Set](index As Integer, row As Object)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.Set*
  nameWithType.vb: DataModelTable.Set(Integer, Object)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.Set(Integer, Object)
  name.vb: Set(Integer, Object)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.Set(System.Index,System.Index,System.Object)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.Set(System.Index,System.Index,System.Object)
  id: Set(System.Index,System.Index,System.Object)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: Set(Index, Index, object?)
  nameWithType: DataModelTable.Set(Index, Index, object?)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.Set(System.Index, System.Index, object?)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: Set
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 581
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Sets the value at the specified <code class="paramref">rowIndex</code> and <code class="paramref">columnIndex</code>
  example: []
  syntax:
    content: public void Set(Index rowIndex, Index columnIndex, object? value)
    parameters:
    - id: rowIndex
      type: System.Index
    - id: columnIndex
      type: System.Index
    - id: value
      type: System.Object
    content.vb: Public Sub [Set](rowIndex As Index, columnIndex As Index, value As Object)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.Set*
  nameWithType.vb: DataModelTable.Set(Index, Index, Object)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.Set(System.Index, System.Index, Object)
  name.vb: Set(Index, Index, Object)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.Set(System.Int32,System.Int32,System.Object)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.Set(System.Int32,System.Int32,System.Object)
  id: Set(System.Int32,System.Int32,System.Object)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: Set(int, int, object?)
  nameWithType: DataModelTable.Set(int, int, object?)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.Set(int, int, object?)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: Set
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 592
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Sets the value at the specified <code class="paramref">rowIndex</code> and <code class="paramref">columnIndex</code>
  example: []
  syntax:
    content: public void Set(int rowIndex, int columnIndex, object? value)
    parameters:
    - id: rowIndex
      type: System.Int32
    - id: columnIndex
      type: System.Int32
    - id: value
      type: System.Object
    content.vb: Public Sub [Set](rowIndex As Integer, columnIndex As Integer, value As Object)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.Set*
  nameWithType.vb: DataModelTable.Set(Integer, Integer, Object)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.Set(Integer, Integer, Object)
  name.vb: Set(Integer, Integer, Object)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.Set(System.Index,System.String,System.Object)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.Set(System.Index,System.String,System.Object)
  id: Set(System.Index,System.String,System.Object)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: Set(Index, string, object?)
  nameWithType: DataModelTable.Set(Index, string, object?)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.Set(System.Index, string, object?)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: Set
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 598
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Sets the value of the specified <code class="paramref">rowIndex</code> for column with the specified <code class="paramref">columnName</code>
  example: []
  syntax:
    content: public void Set(Index rowIndex, string columnName, object? value)
    parameters:
    - id: rowIndex
      type: System.Index
    - id: columnName
      type: System.String
    - id: value
      type: System.Object
    content.vb: Public Sub [Set](rowIndex As Index, columnName As String, value As Object)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.Set*
  nameWithType.vb: DataModelTable.Set(Index, String, Object)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.Set(System.Index, String, Object)
  name.vb: Set(Index, String, Object)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.Set(System.Int32,System.String,System.Object)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.Set(System.Int32,System.String,System.Object)
  id: Set(System.Int32,System.String,System.Object)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: Set(int, string, object?)
  nameWithType: DataModelTable.Set(int, string, object?)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.Set(int, string, object?)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: Set
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 608
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Sets the value of the specified <code class="paramref">rowIndex</code> for column with the specified <code class="paramref">columnName</code>
  example: []
  syntax:
    content: public void Set(int rowIndex, string columnName, object? value)
    parameters:
    - id: rowIndex
      type: System.Int32
    - id: columnName
      type: System.String
    - id: value
      type: System.Object
    content.vb: Public Sub [Set](rowIndex As Integer, columnName As String, value As Object)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.Set*
  nameWithType.vb: DataModelTable.Set(Integer, String, Object)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.Set(Integer, String, Object)
  name.vb: Set(Integer, String, Object)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnFlags(System.Index,System.UInt16)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnFlags(System.Index,System.UInt16)
  id: SetColumnFlags(System.Index,System.UInt16)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: SetColumnFlags(Index, ushort)
  nameWithType: DataModelTable.SetColumnFlags(Index, ushort)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnFlags(System.Index, ushort)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: SetColumnFlags
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 614
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Sets the flags of the column at the specified <code class="paramref">index</code>
  example: []
  syntax:
    content: public void SetColumnFlags(Index index, ushort flags)
    parameters:
    - id: index
      type: System.Index
    - id: flags
      type: System.UInt16
    content.vb: Public Sub SetColumnFlags(index As Index, flags As UShort)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnFlags*
  nameWithType.vb: DataModelTable.SetColumnFlags(Index, UShort)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnFlags(System.Index, UShort)
  name.vb: SetColumnFlags(Index, UShort)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnFlags(System.Int32,System.UInt16)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnFlags(System.Int32,System.UInt16)
  id: SetColumnFlags(System.Int32,System.UInt16)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: SetColumnFlags(int, ushort)
  nameWithType: DataModelTable.SetColumnFlags(int, ushort)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnFlags(int, ushort)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: SetColumnFlags
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 625
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Sets the flags of the column at the specified <code class="paramref">index</code>
  example: []
  syntax:
    content: public void SetColumnFlags(int index, ushort flags)
    parameters:
    - id: index
      type: System.Int32
    - id: flags
      type: System.UInt16
    content.vb: Public Sub SetColumnFlags(index As Integer, flags As UShort)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnFlags*
  nameWithType.vb: DataModelTable.SetColumnFlags(Integer, UShort)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnFlags(Integer, UShort)
  name.vb: SetColumnFlags(Integer, UShort)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnFlags(System.String,System.UInt16)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnFlags(System.String,System.UInt16)
  id: SetColumnFlags(System.String,System.UInt16)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: SetColumnFlags(string, ushort)
  nameWithType: DataModelTable.SetColumnFlags(string, ushort)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnFlags(string, ushort)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: SetColumnFlags
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 631
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Sets the flags of the column with the specified <code class="paramref">columnName</code>
  example: []
  syntax:
    content: public void SetColumnFlags(string columnName, ushort flags)
    parameters:
    - id: columnName
      type: System.String
    - id: flags
      type: System.UInt16
    content.vb: Public Sub SetColumnFlags(columnName As String, flags As UShort)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnFlags*
  nameWithType.vb: DataModelTable.SetColumnFlags(String, UShort)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnFlags(String, UShort)
  name.vb: SetColumnFlags(String, UShort)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnName(System.Index,System.String)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnName(System.Index,System.String)
  id: SetColumnName(System.Index,System.String)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: SetColumnName(Index, string?)
  nameWithType: DataModelTable.SetColumnName(Index, string?)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnName(System.Index, string?)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: SetColumnName
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 641
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Sets the name of the column at the specified <code class="paramref">index</code>
  example: []
  syntax:
    content: public void SetColumnName(Index index, string? name)
    parameters:
    - id: index
      type: System.Index
    - id: name
      type: System.String
    content.vb: Public Sub SetColumnName(index As Index, name As String)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnName*
  nameWithType.vb: DataModelTable.SetColumnName(Index, String)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnName(System.Index, String)
  name.vb: SetColumnName(Index, String)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnName(System.Int32,System.String)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnName(System.Int32,System.String)
  id: SetColumnName(System.Int32,System.String)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: SetColumnName(int, string?)
  nameWithType: DataModelTable.SetColumnName(int, string?)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnName(int, string?)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: SetColumnName
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 652
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Sets the name of the column at the specified <code class="paramref">index</code>
  example: []
  syntax:
    content: public void SetColumnName(int index, string? name)
    parameters:
    - id: index
      type: System.Int32
    - id: name
      type: System.String
    content.vb: Public Sub SetColumnName(index As Integer, name As String)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnName*
  nameWithType.vb: DataModelTable.SetColumnName(Integer, String)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnName(Integer, String)
  name.vb: SetColumnName(Integer, String)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValue(System.Index,System.Object)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValue(System.Index,System.Object)
  id: SetRawValue(System.Index,System.Object)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: SetRawValue(Index, object?)
  nameWithType: DataModelTable.SetRawValue(Index, object?)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValue(System.Index, object?)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: SetRawValue
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 658
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Sets the <code class="paramref">value</code> of a raw table for the specified <code class="paramref">row</code>
  example: []
  syntax:
    content: public void SetRawValue(Index row, object? value)
    parameters:
    - id: row
      type: System.Index
    - id: value
      type: System.Object
    content.vb: Public Sub SetRawValue(row As Index, value As Object)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValue*
  nameWithType.vb: DataModelTable.SetRawValue(Index, Object)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValue(System.Index, Object)
  name.vb: SetRawValue(Index, Object)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValue(System.Int32,System.Object)
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValue(System.Int32,System.Object)
  id: SetRawValue(System.Int32,System.Object)
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: SetRawValue(int, object?)
  nameWithType: DataModelTable.SetRawValue(int, object?)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValue(int, object?)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: SetRawValue
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 668
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Sets the <code class="paramref">value</code> of a raw table for the specified <code class="paramref">row</code>
  example: []
  syntax:
    content: public void SetRawValue(int row, object? value)
    parameters:
    - id: row
      type: System.Int32
    - id: value
      type: System.Object
    content.vb: Public Sub SetRawValue(row As Integer, value As Object)
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValue*
  nameWithType.vb: DataModelTable.SetRawValue(Integer, Object)
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValue(Integer, Object)
  name.vb: SetRawValue(Integer, Object)
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValues(System.Range,System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValues(System.Range,System.Collections.Generic.IEnumerable{System.Object})
  id: SetRawValues(System.Range,System.Collections.Generic.IEnumerable{System.Object})
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: SetRawValues(Range, IEnumerable<object?>)
  nameWithType: DataModelTable.SetRawValues(Range, IEnumerable<object?>)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValues(System.Range, System.Collections.Generic.IEnumerable<object?>)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: SetRawValues
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 674
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Replaces the specified <code class="paramref">rows</code> in a raw table with the specified <code class="paramref">values</code>, returning the length of <code class="paramref">values</code>
  example: []
  syntax:
    content: public int SetRawValues(Range rows, IEnumerable<object?> values)
    parameters:
    - id: rows
      type: System.Range
    - id: values
      type: System.Collections.Generic.IEnumerable{System.Object}
    return:
      type: System.Int32
    content.vb: Public Function SetRawValues(rows As Range, values As IEnumerable(Of Object)) As Integer
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValues*
  nameWithType.vb: DataModelTable.SetRawValues(Range, IEnumerable(Of Object))
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValues(System.Range, System.Collections.Generic.IEnumerable(Of Object))
  name.vb: SetRawValues(Range, IEnumerable(Of Object))
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValues(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValues(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Object})
  id: SetRawValues(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Object})
  parent: LlamaLogic.Packages.Models.Data.DataModelTable
  langs:
  - csharp
  - vb
  name: SetRawValues(int, int, IEnumerable<object?>)
  nameWithType: DataModelTable.SetRawValues(int, int, IEnumerable<object?>)
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValues(int, int, System.Collections.Generic.IEnumerable<object?>)
  type: Method
  source:
    remote:
      path: LlamaLogic.Packages/Models/Data/DataModelTable.cs
      branch: main
      repo: https://github.com/Llama-Logic/LlamaLogic.git
    id: SetRawValues
    path: ../LlamaLogic.Packages/Models/Data/DataModelTable.cs
    startLine: 691
  assemblies:
  - LlamaLogic.Packages
  namespace: LlamaLogic.Packages.Models.Data
  summary: Replaces the specified number of <code class="paramref">rows</code> beginning as the specified <code class="paramref">rowIndex</code> in a raw table with the specified <code class="paramref">values</code>, returning the length of <code class="paramref">values</code>
  example: []
  syntax:
    content: public int SetRawValues(int rowIndex, int rows, IEnumerable<object?> values)
    parameters:
    - id: rowIndex
      type: System.Int32
    - id: rows
      type: System.Int32
    - id: values
      type: System.Collections.Generic.IEnumerable{System.Object}
    return:
      type: System.Int32
    content.vb: Public Function SetRawValues(rowIndex As Integer, rows As Integer, values As IEnumerable(Of Object)) As Integer
  overload: LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValues*
  nameWithType.vb: DataModelTable.SetRawValues(Integer, Integer, IEnumerable(Of Object))
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValues(Integer, Integer, System.Collections.Generic.IEnumerable(Of Object))
  name.vb: SetRawValues(Integer, Integer, IEnumerable(Of Object))
references:
- uid: LlamaLogic.Packages.ResourceType.SimData
  commentId: F:LlamaLogic.Packages.ResourceType.SimData
  href: LlamaLogic.Packages.ResourceType.html#LlamaLogic_Packages_ResourceType_SimData
  name: SimData
  nameWithType: ResourceType.SimData
  fullName: LlamaLogic.Packages.ResourceType.SimData
- uid: LlamaLogic.Packages.ResourceType.CombinedTuning
  commentId: F:LlamaLogic.Packages.ResourceType.CombinedTuning
  href: LlamaLogic.Packages.ResourceType.html#LlamaLogic_Packages_ResourceType_CombinedTuning
  name: CombinedTuning
  nameWithType: ResourceType.CombinedTuning
  fullName: LlamaLogic.Packages.ResourceType.CombinedTuning
- uid: LlamaLogic.Packages.Models.Data
  commentId: N:LlamaLogic.Packages.Models.Data
  href: LlamaLogic.html
  name: LlamaLogic.Packages.Models.Data
  nameWithType: LlamaLogic.Packages.Models.Data
  fullName: LlamaLogic.Packages.Models.Data
  spec.csharp:
  - uid: LlamaLogic
    name: LlamaLogic
    href: LlamaLogic.html
  - name: .
  - uid: LlamaLogic.Packages
    name: Packages
    href: LlamaLogic.Packages.html
  - name: .
  - uid: LlamaLogic.Packages.Models
    name: Models
    href: LlamaLogic.Packages.Models.html
  - name: .
  - uid: LlamaLogic.Packages.Models.Data
    name: Data
    href: LlamaLogic.Packages.Models.Data.html
  spec.vb:
  - uid: LlamaLogic
    name: LlamaLogic
    href: LlamaLogic.html
  - name: .
  - uid: LlamaLogic.Packages
    name: Packages
    href: LlamaLogic.Packages.html
  - name: .
  - uid: LlamaLogic.Packages.Models
    name: Models
    href: LlamaLogic.Packages.Models.html
  - name: .
  - uid: LlamaLogic.Packages.Models.Data
    name: Data
    href: LlamaLogic.Packages.Models.Data.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.#ctor*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.#ctor
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable__ctor_System_String_System_String_System_Nullable_System_UInt32__
  name: DataModelTable
  nameWithType: DataModelTable.DataModelTable
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.DataModelTable
  nameWithType.vb: DataModelTable.New
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Nullable{System.UInt32}
  commentId: T:System.Nullable{System.UInt32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint?
  nameWithType: uint?
  fullName: uint?
  nameWithType.vb: UInteger?
  fullName.vb: UInteger?
  name.vb: UInteger?
  spec.csharp:
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: '?'
  spec.vb:
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.ColumnCount*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.ColumnCount
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable_ColumnCount
  name: ColumnCount
  nameWithType: DataModelTable.ColumnCount
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.ColumnCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.Name*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.Name
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable_Name
  name: Name
  nameWithType: DataModelTable.Name
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.Name
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.RawValues*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.RawValues
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable_RawValues
  name: RawValues
  nameWithType: DataModelTable.RawValues
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.RawValues
- uid: System.Collections.Generic.IEnumerable{System.Object}
  commentId: T:System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<object>
  nameWithType: IEnumerable<object>
  fullName: System.Collections.Generic.IEnumerable<object>
  nameWithType.vb: IEnumerable(Of Object)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Object)
  name.vb: IEnumerable(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.RowCount*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.RowCount
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable_RowCount
  name: RowCount
  nameWithType: DataModelTable.RowCount
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.RowCount
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.SchemaHash*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.SchemaHash
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable_SchemaHash
  name: SchemaHash
  nameWithType: DataModelTable.SchemaHash
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.SchemaHash
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.SchemaName*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.SchemaName
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable_SchemaName
  name: SchemaName
  nameWithType: DataModelTable.SchemaName
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.SchemaName
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.Item*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.Item
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable_Item_System_Index_
  name: this
  nameWithType: DataModelTable.this
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.this
  nameWithType.vb: DataModelTable.this[]
  fullName.vb: LlamaLogic.Packages.Models.Data.DataModelTable.this[]
  name.vb: this[]
- uid: System.Index
  commentId: T:System.Index
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.index
  name: Index
  nameWithType: Index
  fullName: System.Index
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.AddColumn*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.AddColumn
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable_AddColumn_System_String_LlamaLogic_Packages_Models_Data_DataModelType_System_UInt16_System_Collections_Generic_IEnumerable_System_Object__
  name: AddColumn
  nameWithType: DataModelTable.AddColumn
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.AddColumn
- uid: LlamaLogic.Packages.Models.Data.DataModelType
  commentId: T:LlamaLogic.Packages.Models.Data.DataModelType
  parent: LlamaLogic.Packages.Models.Data
  href: LlamaLogic.Packages.Models.Data.DataModelType.html
  name: DataModelType
  nameWithType: DataModelType
  fullName: LlamaLogic.Packages.Models.Data.DataModelType
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.AddRow*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.AddRow
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable_AddRow_System_Object_
  name: AddRow
  nameWithType: DataModelTable.AddRow
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.AddRow
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.Get*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.Get
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable_Get_System_Index_
  name: Get
  nameWithType: DataModelTable.Get
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.Get
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnFlags*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnFlags
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable_GetColumnFlags_System_Index_
  name: GetColumnFlags
  nameWithType: DataModelTable.GetColumnFlags
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnFlags
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnName*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnName
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable_GetColumnName_System_Index_
  name: GetColumnName
  nameWithType: DataModelTable.GetColumnName
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnName
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnType*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnType
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable_GetColumnType_System_Index_
  name: GetColumnType
  nameWithType: DataModelTable.GetColumnType
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnType
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable_GetColumnValues_System_Index_
  name: GetColumnValues
  nameWithType: DataModelTable.GetColumnValues
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetColumnValues
- uid: System.Collections.Generic.IReadOnlyList{System.Object}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<object>
  nameWithType: IReadOnlyList<object>
  fullName: System.Collections.Generic.IReadOnlyList<object>
  nameWithType.vb: IReadOnlyList(Of Object)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Object)
  name.vb: IReadOnlyList(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Range
  commentId: T:System.Range
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.range
  name: Range
  nameWithType: Range
  fullName: System.Range
- uid: System.Predicate{System.Object}
  commentId: T:System.Predicate{System.Object}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<object>
  nameWithType: Predicate<object>
  fullName: System.Predicate<object>
  nameWithType.vb: Predicate(Of Object)
  fullName.vb: System.Predicate(Of Object)
  name.vb: Predicate(Of Object)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValue*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValue
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable_GetRawValue_System_Index_
  name: GetRawValue
  nameWithType: DataModelTable.GetRawValue
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValue
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValues*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValues
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable_GetRawValues_System_Range_
  name: GetRawValues
  nameWithType: DataModelTable.GetRawValues
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.GetRawValues
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.InsertColumn*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.InsertColumn
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable_InsertColumn_System_Index_System_String_LlamaLogic_Packages_Models_Data_DataModelType_System_UInt16_System_Collections_Generic_IEnumerable_System_Object__
  name: InsertColumn
  nameWithType: DataModelTable.InsertColumn
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.InsertColumn
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.InsertRow*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.InsertRow
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable_InsertRow_System_Index_System_Object_
  name: InsertRow
  nameWithType: DataModelTable.InsertRow
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.InsertRow
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.RemoveColumn*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.RemoveColumn
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable_RemoveColumn_System_Index_
  name: RemoveColumn
  nameWithType: DataModelTable.RemoveColumn
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.RemoveColumn
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.RemoveRow*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.RemoveRow
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable_RemoveRow_System_Index_
  name: RemoveRow
  nameWithType: DataModelTable.RemoveRow
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.RemoveRow
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.Set*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.Set
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable_Set_System_Index_System_Object_
  name: Set
  nameWithType: DataModelTable.Set
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.Set
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnFlags*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnFlags
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable_SetColumnFlags_System_Index_System_UInt16_
  name: SetColumnFlags
  nameWithType: DataModelTable.SetColumnFlags
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnFlags
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnName*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnName
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable_SetColumnName_System_Index_System_String_
  name: SetColumnName
  nameWithType: DataModelTable.SetColumnName
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.SetColumnName
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValue*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValue
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable_SetRawValue_System_Index_System_Object_
  name: SetRawValue
  nameWithType: DataModelTable.SetRawValue
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValue
- uid: LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValues*
  commentId: Overload:LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValues
  href: LlamaLogic.Packages.Models.Data.DataModelTable.html#LlamaLogic_Packages_Models_Data_DataModelTable_SetRawValues_System_Range_System_Collections_Generic_IEnumerable_System_Object__
  name: SetRawValues
  nameWithType: DataModelTable.SetRawValues
  fullName: LlamaLogic.Packages.Models.Data.DataModelTable.SetRawValues
